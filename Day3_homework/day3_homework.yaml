# Day 3 Homework Lab: Managing Users

#In this exercise you'll create a few users. The users need to be created on the
#Ansible control host, as well as on the managed hosts and after running the
#playbook, any user created on the localhost must be able to log in using SSH
#keys to the corresponding user account on the remote host, without having to
#enter a password. Make sure that the setup meets the following requirements.

# • Create users sharon, blair, ashley and bob
# • Users sharon and blair are a member of the group admins, users ashley and bob are a member of the group students
# • On the managed hosts, members of the group admins should have sudo privileges to run any command they want
# • All users must be configured with the default password "password"
#
- name: Prep
  hosts: localhost
  tasks:
    - name: Clean up
      file:
       path: "{{ item }}"
       state: absent
      loop:
       - ./files/id_rsa
       - ./files/id_rsa.pub
    - name: Create ssh keys
      command: "ssh-keygen -q -t rsa -N '' -f ./files/id_rsa"

- name: Day 3 Homework
  hosts: ansible1
  tasks:
    - name: Create groups.
      group:
        name: "{{ item.groupname}}"
        state: present
      loop: "{{ group_names }}"
    - name: Make admins sudoers config file.
      copy:
        src: sudoers_admins
        dest: /etc/sudoers.d/admins
        mode: '0440'
    - name: Create users.
      user:
        name: "{{ item.username }}"
        state: present
        groups: "{{ item.group }}"
        append: yes
        password: "{{ item.password | password_hash('sha512') }}"
      loop: "{{ users }}"

    - name: Set authorized key taken from file
      authorized_key:
        user: "{{ item.username }}"
        state: present
        key: "{{ lookup('file', './files/id_rsa.pub') }}"
      loop: "{{ users }}"

- name: Test playbook
  hosts: localhost
  vars:
    users:
      - bob
      - sharon
      - blair
      - ashley
  tasks:
    - name: ssh with key
      raw: "ssh -i ./files/id_rsa -o StrictHostKeyChecking=false {{ item }}@ansible1 'uptime'"
      register: out
      loop: "{{ users }}"